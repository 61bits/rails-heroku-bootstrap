== How to bootstrap a project in Heroku

Clone this repository:
  git clone git@github.com:aitherios/startae-bootstrap.git my_new_project
  cd my_new_project

Rename the project to a name of your choosing and commit:
  rake rename[MyNewProject]
  git add .
  git commit -am 'Renaming my project'

Create a heroku app:
  heroku create my_new_project

Bootstrap heroku addons:
  ./bootstrap_heroku.sh

Push the code to heroku:
  git push heroku master

Run the migrations:
  heroku run rake db:migrate

== Running the project for development

If you are running for the first time:
  bundle install
  rake db:create
  rake db:migrate
  foreman start

Else (Ctrl-C stops the webserver):
  foreman start

== Tecnologies used

* Sass: http://sass-lang.com/
* Compass: http://compass-style.org/
* Susy: http://susy.oddbird.net/
* Slim: http://slim-lang.com/
* Coffeescript: http://coffeescript.org/
* ActiveAdmin: http://activeadmin.info/
* Mercury Editor: http://jejacks0n.github.io/mercury/
* Redactor: https://github.com/SammyLin/redactor-rails/
* jQuery: http://jquery.com/
* Draper: https://github.com/drapergem/draper/
* Factory Girl: https://github.com/thoughtbot/factory_girl
* Rspec: http://rspec.info/
* Cucumber: http://cukes.info/

== Project structure revisited

The default directory structure of a generated Ruby on Rails application:

  ├── app
  │   ├── admin
  │   ├── assets
  │   │   ├── fonts
  │   │   ├── images
  │   │   ├── javascripts
  │   │   └── stylesheets
  │   │       ├── components
  │   │       ├── contacts
  │   │       ├── debugging
  │   │       ├── globals
  │   │       ├── home
  │   │       ├── layouts
  │   │       ├── shared
  │   │       └── webfonts
  │   ├── controllers
  │   ├── decorators
  │   ├── helpers
  │   ├── mailers
  │   ├── models
  │   │   └── redactor_rails
  │   ├── views
  │   │   ├── admin
  │   │   ├── contact_mailer
  │   │   ├── contacts
  │   │   ├── devise
  │   │   ├── frontend
  │   │   ├── home
  │   │   ├── layouts
  │   │   └── pages
  │   └── workers
  ├── config
  │   ├── environments
  │   ├── initializers
  │   └── locales
  ├── db
  ├── doc
  ├── lib
  │   └── tasks
  ├── log
  ├── public
  ├── script
  ├── spec
  │   ├── controllers
  │   ├── decorators
  │   ├── factories
  │   ├── helpers
  │   ├── lib
  │   ├── mailers
  │   ├── models
  │   ├── routing
  │   ├── support
  │   └── views
  ├── tmp
  │   ├── cache
  │   ├── pids
  │   ├── sessions
  │   └── sockets
  └── vendor
      ├── assets
      │   ├── images
      │   ├── javascripts
      │   └── stylesheets
      └── plugins

app
  Holds all the code that's specific to this particular application.

app/assets
  Contains subdirectories for images, stylesheets, and JavaScript files.

app/controllers
  Holds controllers that should be named like weblogs_controller.rb for
  automated URL mapping. All controllers should descend from
  ApplicationController which itself descends from ActionController::Base.

app/models
  Holds models that should be named like post.rb. Models descend from
  ActiveRecord::Base by default.

app/views
  Holds the template files for the view that should be named like
  weblogs/index.html.erb for the WeblogsController#index action. All views use
  eRuby syntax by default.

app/views/layouts
  Holds the template files for layouts to be used with views. This models the
  common header/footer method of wrapping views. In your views, define a layout
  using the <tt>layout :default</tt> and create a file named default.html.erb.
  Inside default.html.erb, call <% yield %> to render the view using this
  layout.

app/helpers
  Holds view helpers that should be named like weblogs_helper.rb. These are
  generated for you automatically when using generators for controllers.
  Helpers can be used to wrap functionality for your views into methods.

config
  Configuration files for the Rails environment, the routing map, the database,
  and other dependencies.

db
  Contains the database schema in schema.rb. db/migrate contains all the
  sequence of Migrations for your schema.

doc
  This directory is where your application documentation will be stored when
  generated using <tt>rake doc:app</tt>

lib
  Application specific libraries. Basically, any kind of custom code that
  doesn't belong under controllers, models, or helpers. This directory is in
  the load path.

public
  The directory available for the web server. Also contains the dispatchers and the
  default HTML files. This should be set as the DOCUMENT_ROOT of your web
  server.

script
  Helper scripts for automation and generation.

spec
  Rspec test folder.

vendor
  External libraries that the application depends on. Also includes the plugins
  subdirectory. If the app has frozen rails, those gems also go here, under
  vendor/rails/. This directory is in the load path.

== System variables used

The variables used by are present in your /.env

WEB_CONCURRENCY=3
  Number of extra processes unicorn will spawn.
RACK_ENV=none
  For unicorn
RAILS_ENV=development
  Devolpment env by default
APP_HOSTNAME=localhost
  The hostname of your app, bootstrap_heroku.sh changes this to your heroku app host.
GOOGLE_ANALYTICS_ID=UA-00000000-0
  Google analytics id
FACEBOOK_APP_ID=237947652982771
  Facebook app id
FACEBOOK_SECRET=9d86008f6d8be5d68c8501662b707008
  Facebook secret
S3_KEY=0000
  Amazon S3 key
S3_SECRET=000
  Amazon S3 secret
S3_REGION=000
  Amazon S3 region
S3_BUCKET=000
  Amazon S3 bucket
